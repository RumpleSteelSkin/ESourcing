services:
  sourcingdb:
    image: mongo
    container_name: sourcingdb
    restart: always
    volumes:
      - ${WEBAPP_STORAGE_HOME}/site:/data/db
    ports:
      - "27017:27017"
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
  
  sourcingsqldb:
    image: mcr.microsoft.com/mssql/server
    container_name: sourcingsqldb
    restart: on-failure
    ports:
      - "1455:1433"
    environment:
      SA_PASSWORD: "!}W^eG3802,["
      ACCEPT_EULA: "Y"

  esourcing.products:
    image: ${DOCKER_REGISTRY-}esourcingproducts
    restart: on-failure
    build:
      context: .
      dockerfile: ESourcing.Products/Dockerfile
    container_name: esourcingproducts
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ProductDatabaseSettings:ConnectionString=mongodb://sourcingdb:27017"
    depends_on:
      - sourcingdb
    ports:
      - "5001:8080"
    volumes:
      - ${HOME}/ASP.NET/Https:/root/.aspnet/https:ro
      - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets

  esourcing.sourcing:
    image: ${DOCKER_REGISTRY-}esourcingsourcing
    restart: on-failure
    build:
      context: .
      dockerfile: Esourcing.Sourcing/Dockerfile
    container_name: esourcingsourcing
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "SourcingDatabaseSettings:ConnectionString=mongodb://sourcingdb:27017"
      - "EventBus:HostName=rabbitmq"
    depends_on:
      - sourcingdb
      - rabbitmq
    volumes:
      - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
      - ${HOME}/.aspnet/https:/root/.aspnet/https/
    ports:
      - "5002:8080"
  
  esourcing.order:
    image: ${DOCKER_REGISTRY-}esourcingorder
    restart: on-failure
    build:
      context: .
      dockerfile: ESourcing.Order/Dockerfile
    container_name: esourcingorder
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:OrderConnection=Server=sourcingsqldb;Database=OrderDb;User Id=sa;Password=!}W^eG3802,[;TrustServerCertificate=True;"
      - "EventBus:HostName=rabbitmq"
    depends_on:
      - sourcingsqldb
      - rabbitmq
    volumes:
      - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
      - ${HOME}/.aspnet/https:/root/.aspnet/https/
    ports:
      - "5003:8080"
  
  esourcing.apigateway:
    image: ${DOCKER_REGISTRY-}esourcingapigateway
    restart: always
    build:
      context: .
      dockerfile: ESourcing.APIGateway/Dockerfile
    container_name: esourcingapigateway
    environment:
       - ASPNETCORE_ENVIRONMENT=Development
       - "OcelotFileName=DockerOcelot.json"
    depends_on:
      - esourcing.products
      - esourcing.sourcing
      - esourcing.order
    ports:
      - "5000:8080"
    volumes:
      - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
      - ${HOME}/.aspnet/https:/root/.aspnet/https/
